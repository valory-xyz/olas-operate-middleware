name: "Common Checks"
on:
  push:
    branches:
      - main
      - staging
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  linter_checks:
    continue-on-error: False
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/setup-go@v3
      with:
        go-version: "1.17.7"
    - name: Install dependencies
      run:  |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install tomte[tox]==0.4.0
        pip install --user --upgrade setuptools
        sudo npm install -g markdown-spellcheck
    - name: Security checks
      run: |
        tox -p -e bandit -e safety
    - name: Code style check
      run: |
        tox -p -e black-check -e isort-check 
    - name: Flake7
      run: |
        tox -e flake8 
    - name: Pylint
      run: tox -e pylint
    - name: Static type check
      run: tox -e mypy
    # - name: Check spelling
    #   run: tox -e spell-check
    # - name: License compatibility check
    #   run: tox -e liccheck
    # tox -p -e vulture -e darglint

  test:
    continue-on-error: True
    needs:
      - linter_checks
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ "3.10" ]
  
    timeout-minutes: 30

    env:
      BASE_RPC: ${{ secrets.BASE_RPC }}
      ETHEREUM_RPC: ${{ secrets.ETHEREUM_RPC }}
      GNOSIS_RPC: ${{ secrets.GNOSIS_RPC }}
      MODE_RPC: ${{ secrets.MODE_RPC }}
      OPTIMISM_RPC: ${{ secrets.OPTIMISM_RPC }}
      BASE_TESTNET_RPC: ${{ secrets.BASE_TESTNET_RPC }}
      ETHEREUM_TESTNET_RPC: ${{ secrets.ETHEREUM_TESTNET_RPC }}
      GNOSIS_TESTNET_RPC: ${{ secrets.GNOSIS_TESTNET_RPC }}
      MODE_TESTNET_RPC: ${{ secrets.MODE_TESTNET_RPC }}
      OPTIMISM_TESTNET_RPC: ${{ secrets.OPTIMISM_TESTNET_RPC }}
      POLYGON_TESTNET_RPC: ${{ secrets.POLYGON_TESTNET_RPC }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests
        run: |
          pip install tomte[tox]==0.4.0
          tox -e unit-tests
